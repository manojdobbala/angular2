"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var test_service_spec_1 = require("../common/services/test.service.spec");
var test_model_spec_1 = require("../common/models/test.model.spec");
var TestAppComponent = (function () {
    function TestAppComponent(testService) {
        this.testService = testService;
    }
    TestAppComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.testService.get("AAA")
            .subscribe(function (resp) {
            _this.model = resp;
        });
    };
    TestAppComponent = __decorate([
        core_1.Component({
            selector: "test-app",
            template: "\n        <h1>Test App</h1>\n        <p>{{ model?.toString() }}</p>\n",
            providers: [test_service_spec_1.TestService]
        }), 
        __metadata('design:paramtypes', [test_service_spec_1.TestService])
    ], TestAppComponent);
    return TestAppComponent;
}());
exports.TestAppComponent = TestAppComponent;
/**
 *  ===== testing world =====
 */
var assert = require("power-assert");
var core_2 = require("../../core");
var mocha_1 = require("../../mocha");
var platform_browser_1 = require("@angular/platform-browser");
var Observable_1 = require("rxjs/Observable");
require("rxjs/add/observable/of");
var MockTestService = (function () {
    function MockTestService() {
    }
    MockTestService.prototype.get = function (id) {
        return Observable_1.Observable.of(new test_model_spec_1.TestModel(id));
    };
    return MockTestService;
}());
mocha_1.describe("TestAppComponent", function () {
    var builder;
    mocha_1.beforeEach(core_2.inject([core_2.TestComponentBuilder], function (tcb) {
        builder = tcb.overrideProviders(TestAppComponent, [
            core_1.provide(test_service_spec_1.TestService, { useClass: MockTestService })
        ]);
    }));
    mocha_1.it("can create", core_2.async(function () {
        builder.createAsync(TestAppComponent)
            .then(function (fixture) {
            assert(!!fixture);
        });
    }));
    mocha_1.it("should has text: 'Test App'", core_2.async(function () {
        builder.createAsync(TestAppComponent)
            .then(function (fixture) {
            var el = fixture.debugElement;
            assert(el.query(platform_browser_1.By.css("h1")).nativeElement.innerHTML === "Test App");
        });
    }));
    mocha_1.it("should apply ngOnInit on detectChanges()", core_2.async(function () {
        builder.createAsync(TestAppComponent).then(function (fixture) {
            var el = fixture.debugElement;
            assert(el.query(platform_browser_1.By.css("p")).nativeElement.innerHTML === "");
            fixture.detectChanges();
            assert(el.query(platform_browser_1.By.css("p")).nativeElement.innerHTML !== "");
        });
    }));
});
